// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Core catalog models
model Brand {
  id          String    @id @default(cuid())
  name        String
  slug        String    @unique
  description String?
  logoUrl     String?
  heroImage   String?
  isActive    Boolean   @default(true)

  products    Product[]

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Product {
  id               String           @id @default(cuid())
  name             String
  slug             String           @unique
  description      String?
  basePriceCents   Int
  brandId          String
  isWorldExclusive Boolean          @default(false)
  isActive         Boolean          @default(true)

  brand            Brand            @relation(fields: [brandId], references: [id])
  variants         ProductVariant[]
  images           ProductImage[]
  drops            DropProduct[]
  bundleItems      BundleItem[]
  cartItems        CartItem[]       @relation(name: "CartItem_Product")

  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
}

model ProductVariant {
  id             String  @id @default(cuid())
  productId      String
  sku            String  @unique
  size           String?
  color          String?
  priceCents     Int?
  stock          Int     @default(0)
  isActive       Boolean @default(true)

  product        Product @relation(fields: [productId], references: [id])
  cartItems      CartItem[] @relation(name: "CartItem_Variant")
}

model ProductImage {
  id        String  @id @default(cuid())
  productId String
  url       String
  alt       String?
  position  Int     @default(0)

  product   Product @relation(fields: [productId], references: [id])
}

// Weekly drop schedule
model Drop {
  id          String        @id @default(cuid())
  title       String
  slug        String        @unique
  description String?
  dropDate    DateTime
  isActive    Boolean       @default(true)

  products    DropProduct[]

  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model DropProduct {
  dropId    String
  productId String
  isPrimary Boolean @default(false)

  drop      Drop    @relation(fields: [dropId], references: [id])
  product   Product @relation(fields: [productId], references: [id])

  @@id([dropId, productId])
}

// Bundles
model Bundle {
  id                String       @id @default(cuid())
  title             String
  slug              String       @unique
  description       String?
  bundlePriceCents  Int
  heroImage         String?
  isActive          Boolean      @default(true)

  items             BundleItem[]
  cartItems         CartItem[]   @relation(name: "CartItem_Bundle")

  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
}

model BundleItem {
  id        String  @id @default(cuid())
  bundleId  String
  productId String
  quantity  Int     @default(1)

  bundle    Bundle  @relation(fields: [bundleId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

// Cart & checkout (guest carts by cookie)
model Cart {
  id        String     @id @default(cuid())
  cookieId  String     @unique
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  items     CartItem[]
}

model CartItem {
  id           String          @id @default(cuid())
  cartId       String
  productId    String?
  variantId    String?
  bundleId     String?
  quantity     Int             @default(1)
  priceCents   Int
  nameSnapshot String

  cart         Cart            @relation(fields: [cartId], references: [id])
  product      Product?        @relation(name: "CartItem_Product", fields: [productId], references: [id])
  variant      ProductVariant? @relation(name: "CartItem_Variant", fields: [variantId], references: [id])
  bundle       Bundle?         @relation(name: "CartItem_Bundle", fields: [bundleId], references: [id])

  @@index([cartId])
}

// Orders for COD and online payments
model Order {
  id             String      @id @default(cuid())
  cookieId       String
  totalCents     Int
  shippingLabel  String?
  shippingCents  Int         @default(0)
  paymentMethod  String      // 'cod' | 'sslcommerz'
  status         String      @default("pending") // 'pending' | 'confirmed' | 'failed'
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt

  items          OrderItem[]
}

model OrderItem {
  id           String  @id @default(cuid())
  orderId      String
  nameSnapshot String
  priceCents   Int
  quantity     Int

  order        Order   @relation(fields: [orderId], references: [id])
}

